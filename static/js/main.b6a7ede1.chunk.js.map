{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","logic/utility.js","logic/database.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","scenes/regionRoulette/RegionRoulette.jsx","scenes/regionRoulette/index.js","components/cursor/Cursor.jsx","components/cursor/index.js","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","required","GAME_PHASES","LSKEY","REGIONS","name","populations","Menu","userName","changeUserName","changeClientScene","setName","onStartCampaign","onJoinCampaign","length","Pregame","clientData","currentLobbyKey","getRandomGameKey","result","characters","i","push","charAt","Math","floor","random","join","G","Gun","joinGame","key","get","on","_msg","_ev","put","updateGame","myData","deviceId","users","ack","JoinPregame","changeCurrentLobbyKey","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","RegionRoulette","gameData","choosenRegion","changeGameData","useMemo","usedRegions","regions_played","map","r","unusedRegions","Object","keyName","includes","filter","x","obj","toString","replace","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorClass","hide","mouseDown","mouseUp","handleMouseMove","event","window","y","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","useEffect","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","style","transform","App","lsValue","localStorage","getItem","JSON","parse","defaultValues","c","clientScene","cursor","setItem","stringify","setClientData","newScene","prev","newUserName","newCurrentLobbyKey","leaveGame","newCursorObj","newValue","setGameData","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b6a7ede1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      className={\"simple-button\" + (disabled ? \" disabled\" : \"\")}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({ label, value, setValue, placeholder }) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","export const GAME_PHASES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  REGION_ROULETTE: \"region_roulette\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"CLIENT_DATA\",\r\n};\r\n\r\nexport const REGIONS = [\r\n  { id: 1, name: \"Abruzzo\", populations: 1322247 },\r\n  { id: 2, name: \"Basilicata\", populations: 570365 },\r\n  { id: 3, name: \"Calabria\", populations: 1965128 },\r\n  { id: 4, name: \"Campania\", populations: 5839084 },\r\n  { id: 5, name: \"Emilia-Romagna\", populations: 4448841 },\r\n  { id: 6, name: \"Friuli-Venezia Giulia\", populations: 1217872 },\r\n  { id: 7, name: \"Lazio\", populations: 5898124 },\r\n  { id: 8, name: \"Liguria\", populations: 1565307 },\r\n  { id: 9, name: \"Lombardia\", populations: 10018806 },\r\n  { id: 10, name: \"Marche\", populations: 1538055 },\r\n  { id: 11, name: \"Molise\", populations: 310449 },\r\n  { id: 12, name: \"Piemonte\", populations: 4392526 },\r\n  { id: 13, name: \"Puglia\", populations: 4063888 },\r\n  { id: 14, name: \"Sardegna\", populations: 1653135 },\r\n  { id: 15, name: \"Sicilia\", populations: 5056641 },\r\n  { id: 16, name: \"Toscana\", populations: 3742437 },\r\n  { id: 17, name: \"Trentino-Alto Adige\", populations: 1062860 },\r\n  { id: 18, name: \"Umbria\", populations: 888908 },\r\n  { id: 19, name: \"Valle d'Aosta\", populations: 126883 },\r\n  { id: 20, name: \"Veneto\", populations: 4907529 },\r\n];\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\nimport { GAME_PHASES } from \"../../logic/constants\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ userName, changeUserName, changeClientScene }) => {\r\n  const [name, setName] = useState(userName);\r\n\r\n  const onStartCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(GAME_PHASES.LOBBY_PREGAME);\r\n  }, [name]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(GAME_PHASES.JOIN_LOBBY_PREGAME);\r\n  }, [name]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput label=\"Name\" value={name} setValue={setName} />\r\n      <Button\r\n        text=\"Create campaign\"\r\n        icon=\"add\"\r\n        onClick={onStartCampaign}\r\n        disabled={name.length === 0}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={name.length === 0}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport { GAME_PHASES } from \"../../logic/constants\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({ clientData, changeClientScene }) => {\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.currentLobbyKey}</span>\r\n      </div>\r\n      <div className=\"player blue\">\r\n        <span className=\"icon material-icons-round\">face</span>\r\n        <span>{clientData.userName + \" (you)\"}</span>\r\n      </div>\r\n      <div className=\"player red\">\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n        <span>Player red (bot)</span>\r\n      </div>\r\n      <div className=\"player green\">\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n        <span>Player green (bot)</span>\r\n      </div>\r\n      <div className=\"player yellow\">\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n        <span>Player yellow (bot)</span>\r\n      </div>\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(GAME_PHASES.MENU)}\r\n      ></Button>\r\n      <Button text=\"Start\" icon=\"play_arrow\" onClick={() => {}}></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","export const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomGameKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n","import Gun from \"gun\";\r\nimport { getRandomGameKey } from \"./utility\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\n\r\n// const initGun = () => {\r\n//   return Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\n// };\r\n\r\nconst resetGame = (key) => {\r\n  //const G = initGun();\r\n\r\n  G.get(key).put(null);\r\n};\r\n\r\nexport const saveGame = (game) => {\r\n  //const G = initGun();\r\n\r\n  G.get(game.key).put(game, (ack) => {\r\n    // console.log(\"game saved:\", ack);\r\n  });\r\n};\r\n\r\nexport const createGame = (gamePhase) => {\r\n  //const G = initGun();\r\n\r\n  const gameObj = {\r\n    key: getRandomGameKey(),\r\n    gamePhase,\r\n  };\r\n\r\n  saveGame(G, gameObj);\r\n};\r\n\r\nexport const joinGame = (clientData, onChange) => {\r\n  //const G = initGun();\r\n\r\n  G.get(clientData.currentLobbyKey).on((value, key, _msg, _ev) => {\r\n    // console.log({ value });\r\n    // console.log({ key });\r\n    // console.log({ _msg });\r\n    // console.log({ _ev });\r\n    onChange(value);\r\n  }, true);\r\n\r\n  resetGame(clientData.currentLobbyKey);\r\n\r\n  updateGame(clientData);\r\n};\r\n\r\nexport const updateGame = (clientData) => {\r\n  //const G = initGun();\r\n\r\n  const myData = (clientData.deviceId: {\r\n    userName: clientData.userName,\r\n    clientScene: clientData.clientScene,\r\n  });\r\n\r\n  G.get(clientData.currentLobbyKey).put({ users: { myData } }, (ack) => {\r\n    // console.log(\"db updated\");\r\n  });\r\n};\r\n\r\nexport const leaveGame = (key) => {\r\n  //const G = initGun();\r\n\r\n  G.get(key).off();\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\nimport { GAME_PHASES, LSKEY } from \"../../logic/constants\";\r\nimport { joinGame } from \"../../logic/database\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({ changeCurrentLobbyKey, changeClientScene }) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeCurrentLobbyKey(lobbyCode);\r\n    changeClientScene(GAME_PHASES.LOBBY_PREGAME)\r\n  }, [lobbyCode]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(GAME_PHASES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport { GAME_PHASES, REGIONS } from \"../../logic/constants\";\r\n\r\nimport \"./regionRoulette.css\";\r\n\r\nconst RegionRoulette = ({ changeClientScene, gameData, changeGameData }) => {\r\n  const choosenRegion = useMemo(() => {\r\n    const usedRegions = gameData.regions_played.map((r) => r.id);\r\n    const unusedRegions = Object.keys(REGIONS)\r\n      .map((keyName) =>\r\n        !usedRegions.includes(REGIONS[keyName].id) ? REGIONS[keyName].id : null\r\n      )\r\n      .filter((x) => x);\r\n    const id = unusedRegions[Math.floor(Math.random() * unusedRegions.length)];\r\n    return REGIONS.filter((obj) => obj.id === id)[0];\r\n  }, [gameData]);\r\n\r\n  return (\r\n    <div id=\"region-roulette\">\r\n      <div className=\"choosen-region\">\r\n        <label>Name:</label>\r\n        <span>{choosenRegion.name}</span>\r\n        <label>Populations:</label>\r\n        <span>\r\n          {choosenRegion.populations\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"'\")}\r\n        </span>\r\n      </div>\r\n      <Button\r\n        text=\"Continue\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(GAME_PHASES.REGION_ROULETTE)}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegionRoulette.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  changeGameData: PropTypes.func.isRequired,\r\n};\r\n\r\nRegionRoulette.defaultProps = {};\r\n\r\nexport default RegionRoulette;\r\n","import RegionRoulette from './RegionRoulette';\r\n\r\nexport default RegionRoulette;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n}) => {\r\n  // const [hide, setHide] = useState(true);\r\n  // const [mouseDown, setMouseDown] = useState(false);\r\n  // const [mouseUp, setMouseUp] = useState(false);\r\n  // const [x, setX] = useState(0);\r\n  // const [y, setY] = useState(0);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n      ].filter((x) => !!x),\r\n    [cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    const e = event || window.event;\r\n    changeCursorX(e.x);\r\n    changeCursorY(e.y);\r\n    // setX(e.x);\r\n    // setY(e.y);\r\n  }, []);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n    // setHide(false);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n    // setMouseUp(false);\r\n    // setHide(true);\r\n  }, []);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n    // setMouseUp(false);\r\n    // setMouseDown(true);\r\n  }, []);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n    // setMouseDown(false);\r\n    // setMouseUp(true);\r\n  }, []);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"cursor\"\r\n      className={cursorClass}\r\n      style={{\r\n        transform: \"translate(\" + cursorData.x + \"px, \" + cursorData.y + \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"cursor\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {};\r\n\r\nexport default Cursor;\r\n","import Cursor from \"./Cursor\";\r\n\r\nexport default Cursor;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport Background from \"./scenes/background\";\nimport Menu from \"./scenes/menu\";\nimport Pregame from \"./scenes/pregame\";\nimport JoinPregame from \"./scenes/joinPregame\";\nimport RegionRoulette from \"./scenes/regionRoulette\";\n\nimport Cursor from \"./components/cursor\";\n\nimport { GAME_PHASES, LSKEY } from \"./logic/constants\";\nimport { joinGame, updateGame } from \"./logic/database\";\nimport { uuidv4, getRandomGameKey } from \"./logic/utility\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  // CLIENT DATA\n\n  const [clientData, setClientData] = useState(() => {\n    const lsValue = localStorage.getItem(LSKEY.CLIENT_DATA);\n    if (lsValue !== null) return JSON.parse(lsValue);\n    const defaultValues = {\n      deviceId: uuidv4(),\n      clientScene: GAME_PHASES.MENU,\n      userName: \"\",\n      currentLobbyKey: getRandomGameKey(),\n      cursor: {\n        x: 0,\n        y: 0,\n        mouseUp: false,\n        mouseDown: false,\n        hide: true,\n        text: \"\",\n      },\n    };\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(defaultValues));\n    return defaultValues;\n  });\n\n  useEffect(() => {\n    // console.log(\"saving: \", { ...clientData });\n    updateGame(clientData);\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(clientData));\n  }, [clientData]);\n\n  const changeClientScene = useCallback((newScene) => {\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\n  }, []);\n\n  const changeUserName = useCallback((newUserName) => {\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\n  }, []);\n\n  const changeCurrentLobbyKey = useCallback((newCurrentLobbyKey) => {\n    setClientData((prev) => {\n      leaveGame(prev.currentLobbyKey);\n      return { ...prev, currentLobbyKey: newCurrentLobbyKey };\n    });\n  }, []);\n\n  const changeCursor = useCallback((newCursorObj) => {\n    setClientData((prev) => ({ ...prev, cursor: newCursorObj }));\n  }, []);\n\n  // CLIENT DATA CURSOR\n\n  const changeCursorX = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, x: newValue },\n    }));\n  }, []);\n  const changeCursorY = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, y: newValue },\n    }));\n  }, []);\n  const changeCursorUp = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseUp: newValue },\n    }));\n  }, []);\n  const changeCursorDown = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseDown: newValue },\n    }));\n  }, []);\n  const changeCursorHide = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, hide: newValue },\n    }));\n  }, []);\n\n  // GAME DATA\n\n  const [gameData, setGameData] = useState(null);\n\n  useEffect(() => {\n    if (\n      clientData.currentLobbyKey !== null &&\n      clientData.currentLobbyKey !== \"\"\n    )\n      joinGame(clientData, setGameData);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"gameData changed: \", { ...gameData });\n  }, [gameData]);\n\n  return (\n    <>\n      <Background />\n      {GAME_PHASES.MENU === clientData.clientScene && (\n        <Menu\n          userName={clientData.userName}\n          changeUserName={changeUserName}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {GAME_PHASES.LOBBY_PREGAME === clientData.clientScene && (\n        <Pregame\n          clientData={clientData}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {GAME_PHASES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\n        <JoinPregame\n          changeCurrentLobbyKey={changeCurrentLobbyKey}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {GAME_PHASES.REGION_ROULETTE === clientData.clientScene && (\n        <RegionRoulette changeClientScene={changeClientScene} />\n      )}\n      {clientData.cursor && (\n        <Cursor\n          cursorData={clientData.cursor}\n          changeCursorX={changeCursorX}\n          changeCursorY={changeCursorY}\n          changeCursorUp={changeCursorUp}\n          changeCursorDown={changeCursorDown}\n          changeCursorHide={changeCursorHide}\n        ></Cursor>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}