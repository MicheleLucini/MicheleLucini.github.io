{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","logic/utility.js","logic/database.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/PlayerSlot.jsx","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","scenes/characterSelection/CharacterSelection.jsx","scenes/characterSelection/index.js","components/cursor/Cursor.jsx","components/cursor/CursorGhost.jsx","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","onKeyPressEnter","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","onKeyPress","window","event","key","required","appVersion","CLIENT_SCENES","LSKEY","getRandomGameKey","result","characters","i","push","charAt","Math","floor","random","length","join","G","Gun","connected","joinGame","clientData","fnJoined","console","log","leaveGame","fnTrue","fnFalse","get","once","requestedGame","error","ifExistGame","downloadGame","on","_msg","_ev","subscribeGame","off","creatorDeviceId","deviceId","ifIsMyGame","put","deleteGame","Menu","changeUserName","changeCurrentLobbyKey","changeClientScene","mergeGameData","userName","name","setName","onCreateCampaign","newGame","ack","createGame","onJoinCampaign","onContinueCampaign","currentLobbyKey","onLeaveCampaign","PlayerSlot","color","itsAMe","onSelectPlayer","customClass","useMemo","filter","x","spanText","Pregame","gameData","changePlayerId","onSelectPlayerSlot","playerId","newData","resetMyPlayer","playerBlue_userName","playerBlue_deviceId","playerRed_userName","playerRed_deviceId","playerGreen_userName","playerGreen_deviceId","playerYellow_userName","playerYellow_deviceId","JoinPregame","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","CharacterSelection","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorColor","cursorClass","hide","mouseDown","mouseUp","handleMouseMove","y","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","useEffect","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","style","transform","CursorGhost","App","lsValue","JSON","parse","localStorage","getItem","clientScene","defaultValues","replace","c","r","toString","cursor","setItem","stringify","setClientData","myData","updateMyPlayer","newScene","prev","newUserName","newCurrentLobbyKey","newPlayerId","newValue","setGameData","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8123158.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      className={\"simple-button\" + (disabled ? \" disabled\" : \"\")}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  placeholder,\r\n  onKeyPressEnter,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n  const onKeyPress = useCallback((e) => {\r\n    if (!e) e = window.event;\r\n    var keyCode = e.code || e.key;\r\n    if (keyCode === \"Enter\" && onKeyPressEnter) {\r\n      onKeyPressEnter();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  onKeyPressEnter: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n  onKeyPressEnter: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","export const appVersion = \"0.0.2\";\r\n\r\nexport const CLIENT_SCENES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  CHARACTER_SELECTION: \"character_selection\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"CLIENT_DATA\",\r\n};\r\n","export const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomGameKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n","import Gun from \"gun\";\r\nimport { getRandomGameKey } from \"./utility\";\r\nimport { appVersion, CLIENT_SCENES } from \"./constants\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\nlet connected = false;\r\n\r\n/* Base game ops */\r\n\r\nexport const createGame = (clientData) => {\r\n  const newGame = {\r\n    key: getRandomGameKey(),\r\n    appVersion: appVersion,\r\n    creatorDeviceId: clientData.deviceId,\r\n  };\r\n\r\n  G.get(newGame.key).put(newGame, (ack) => console.log(\"created game: \", ack));\r\n\r\n  return newGame;\r\n};\r\n\r\nconst deleteGame = (key) => {\r\n  G.get(key).put({ key: null });\r\n};\r\n\r\nconst downloadGame = (key, onChange) => {\r\n  G.get(key).once((requestedGame) => {\r\n    console.log(\"game downloaded: \", requestedGame);\r\n    onChange(requestedGame);\r\n  });\r\n};\r\n\r\nconst subscribeGame = (key, onChange) => {\r\n  G.get(key).on((value, key, _msg, _ev) => {\r\n    // console.log({ value });\r\n    // console.log({ key });\r\n    // console.log({ _msg });\r\n    // console.log({ _ev });\r\n    onChange(value);\r\n  }, true);\r\n};\r\n\r\nconst ifExistGame = (key, fnTrue, fnFalse) => {\r\n  G.get(key).once((requestedGame) => {\r\n    if (requestedGame && requestedGame.key) {\r\n      console.log(\"the game \" + requestedGame.key + \" exists\", requestedGame);\r\n      fnTrue();\r\n    } else {\r\n      console.error(\r\n        \"The game \" + requestedGame.key + \" doesn't exists.\",\r\n        requestedGame\r\n      );\r\n      fnFalse();\r\n    }\r\n  });\r\n};\r\n\r\nconst ifIsMyGame = (key, clientData, fnTrue) => {\r\n  G.get(key).once((requestedGame) => {\r\n    if (\r\n      requestedGame &&\r\n      requestedGame.creatorDeviceId === clientData.deviceId\r\n    ) {\r\n      console.log(\"the game \" + requestedGame.key + \" is mine\", requestedGame);\r\n      fnTrue();\r\n    }\r\n  });\r\n};\r\n\r\n/* Complex game ops */\r\n\r\nexport const joinGame = (key, clientData, onChange, fnJoined) => {\r\n  console.log(\"connected? \", connected);\r\n  if (connected) leaveGame(connected, clientData);\r\n  console.log(\"key? \", key);\r\n  if (!key || key.length !== 4) return false;\r\n  ifExistGame(\r\n    key,\r\n    () => {\r\n      // exist\r\n      downloadGame(key, onChange);\r\n      subscribeGame(key, onChange);\r\n      connected = key;\r\n      fnJoined();\r\n    },\r\n    () => {\r\n      // does not\r\n    }\r\n  );\r\n};\r\n\r\nexport const leaveGame = (key, clientData) => {\r\n  if (!key) return;\r\n  G.get(key).off();\r\n  connected = null;\r\n  // Se il game è il mio lo elimino\r\n  ifIsMyGame(key, clientData, () => deleteGame(key));\r\n};\r\n\r\n/* Gestione player */\r\n\r\nexport const updateMyPlayer = (clientData) => {\r\n  if (!connected || !clientData.playerId) return;\r\n\r\n  let myData = {};\r\n  myData[clientData.playerId + \"_deviceId\"] = clientData.deviceId;\r\n  myData[clientData.playerId + \"_userName\"] = clientData.userName;\r\n  myData[clientData.playerId + \"_clientScene\"] = clientData.clientScene;\r\n\r\n  if (clientData.clientScene === CLIENT_SCENES.CHARACTER_SELECTION) {\r\n    myData[clientData.playerId + \"_cursorX\"] = clientData.cursor.x;\r\n    myData[clientData.playerId + \"_cursorY\"] = clientData.cursor.y;\r\n    myData[clientData.playerId + \"_cursorHide\"] = clientData.cursor.hide;\r\n    myData[clientData.playerId + \"_cursorText\"] = clientData.cursor.text;\r\n  }\r\n\r\n  G.get(connected).put(myData);\r\n};\r\n\r\nexport const resetMyPlayer = (clientData) => {\r\n  if (!connected || !clientData.playerId) return;\r\n\r\n  let newData = {};\r\n  newData[clientData.playerId + \"_deviceId\"] = null;\r\n  newData[clientData.playerId + \"_userName\"] = null;\r\n  newData[clientData.playerId + \"_clientScene\"] = null;\r\n  newData[clientData.playerId + \"_cursorX\"] = null;\r\n  newData[clientData.playerId + \"_cursorY\"] = null;\r\n  newData[clientData.playerId + \"_cursorHide\"] = null;\r\n  newData[clientData.playerId + \"_cursorText\"] = null;\r\n\r\n  G.get(connected).put(newData);\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\nimport { leaveGame, createGame, joinGame } from \"../../logic/database\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({\r\n  clientData,\r\n  changeUserName,\r\n  changeCurrentLobbyKey,\r\n  changeClientScene,\r\n  mergeGameData,\r\n}) => {\r\n  const [name, setName] = useState(clientData.userName);\r\n\r\n  const onCreateCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    const newGame = createGame(clientData);\r\n    joinGame(newGame.key, clientData, mergeGameData, () => {\r\n      changeCurrentLobbyKey(newGame.key);\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    });\r\n  }, [name, clientData, mergeGameData]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.JOIN_LOBBY_PREGAME);\r\n  }, [name]);\r\n\r\n  const onContinueCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    joinGame(clientData.currentLobbyKey, clientData, mergeGameData, () => {\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    });\r\n  }, [name, clientData, mergeGameData]);\r\n\r\n  const onLeaveCampaign = useCallback(() => {\r\n    leaveGame(clientData.currentLobbyKey, clientData);\r\n    changeCurrentLobbyKey(null);\r\n  }, [clientData]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput label=\"Name\" value={name} setValue={setName} />\r\n      {clientData.currentLobbyKey && (\r\n        <>\r\n          <Button\r\n            text={\"Continue campaign \" + clientData.currentLobbyKey}\r\n            icon=\"navigate_next\"\r\n            onClick={onContinueCampaign}\r\n          />\r\n          <Button\r\n            text={\"Leave campaign \" + clientData.currentLobbyKey}\r\n            icon=\"logout\"\r\n            onClick={onLeaveCampaign}\r\n          />\r\n        </>\r\n      )}\r\n      {!clientData.currentLobbyKey && (\r\n        <>\r\n          <Button\r\n            text=\"Create campaign\"\r\n            icon=\"add\"\r\n            onClick={onCreateCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n          <Button\r\n            text=\"Join campaign\"\r\n            icon=\"login\"\r\n            onClick={onJoinCampaign}\r\n            disabled={name.length === 0}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeCurrentLobbyKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst PlayerSlot = ({ color, userName, itsAMe, onSelectPlayer }) => {\r\n  const customClass = useMemo(\r\n    () =>\r\n      [\"player\", color, userName ? null : \"locked\"]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [color, userName]\r\n  );\r\n\r\n  const spanText = useMemo(() => {\r\n    if (!userName) return \"Player \" + color + \" (bot)\";\r\n    if (itsAMe) return userName + \" (you)\";\r\n    return userName;\r\n  }, [userName, color, itsAMe]);\r\n\r\n  return (\r\n    <div className={customClass} onClick={onSelectPlayer}>\r\n      {userName ? (\r\n        <span className=\"icon material-icons-round\">face</span>\r\n      ) : (\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n      )}\r\n      <span>{spanText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayerSlot.propTypes = {\r\n  color: PropTypes.oneOf([\"blue\", \"red\", \"green\", \"yellow\"]).isRequired,\r\n  userName: PropTypes.string,\r\n  itsAMe: PropTypes.bool.isRequired,\r\n  onSelectPlayer: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayerSlot.defaultProps = {\r\n  userName: null,\r\n};\r\n\r\nexport default PlayerSlot;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport PlayerSlot from \"./PlayerSlot\";\r\n\r\nimport { resetMyPlayer } from \"../../logic/database\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({\r\n  clientData,\r\n  gameData,\r\n  changePlayerId,\r\n  changeClientScene,\r\n}) => {\r\n  const onSelectPlayerSlot = useCallback(\r\n    (playerId) => {\r\n      // Se non è già occupato\r\n      if (gameData[playerId + \"_deviceId\"]) return;\r\n      // Libero il posto\r\n      resetMyPlayer(clientData);\r\n      // Occupo il nuovo\r\n      changePlayerId(playerId);\r\n    },\r\n    [clientData]\r\n  );\r\n\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.currentLobbyKey}</span>\r\n      </div>\r\n      <PlayerSlot\r\n        color=\"blue\"\r\n        userName={gameData?.playerBlue_userName}\r\n        itsAMe={gameData?.playerBlue_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerBlue\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"red\"\r\n        userName={gameData?.playerRed_userName}\r\n        itsAMe={gameData?.playerRed_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerRed\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"green\"\r\n        userName={gameData?.playerGreen_userName}\r\n        itsAMe={gameData?.playerGreen_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerGreen\")}\r\n      />\r\n      <PlayerSlot\r\n        color=\"yellow\"\r\n        userName={gameData?.playerYellow_userName}\r\n        itsAMe={gameData?.playerYellow_deviceId === clientData.deviceId}\r\n        onSelectPlayer={() => onSelectPlayerSlot(\"playerYellow\")}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      />\r\n      <Button\r\n        text=\"Start\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.CHARACTER_SELECTION)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {\r\n  gameData: null,\r\n};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\n\r\nimport { CLIENT_SCENES, LSKEY } from \"../../logic/constants\";\r\nimport { joinGame } from \"../../logic/database\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({\r\n  clientData,\r\n  changeCurrentLobbyKey,\r\n  changeClientScene,\r\n  mergeGameData,\r\n}) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    joinGame(lobbyCode, clientData, mergeGameData, () => {\r\n      changeCurrentLobbyKey(lobbyCode);\r\n      changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n    });\r\n  }, [lobbyCode, clientData, mergeGameData]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n        onKeyPressEnter={onJoinCampaign}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  changeCurrentLobbyKey: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n  mergeGameData: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./characterSelection.css\";\r\n\r\nconst CharacterSelection = ({ changeClientScene }) => {\r\n  return (\r\n    <div id=\"character_selection\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.LOBBY_PREGAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterSelection.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nCharacterSelection.defaultProps = {};\r\n\r\nexport default CharacterSelection;\r\n","import CharacterSelection from './CharacterSelection';\r\n\r\nexport default CharacterSelection;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  playerId,\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n}) => {\r\n  // const [hide, setHide] = useState(true);\r\n  // const [mouseDown, setMouseDown] = useState(false);\r\n  // const [mouseUp, setMouseUp] = useState(false);\r\n  // const [x, setX] = useState(0);\r\n  // const [y, setY] = useState(0);\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    const e = event || window.event;\r\n    changeCursorX(e.x);\r\n    changeCursorY(e.y);\r\n    // setX(e.x);\r\n    // setY(e.y);\r\n  }, []);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n    // setHide(false);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n    // setMouseUp(false);\r\n    // setHide(true);\r\n  }, []);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n    // setMouseUp(false);\r\n    // setMouseDown(true);\r\n  }, []);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n    // setMouseDown(false);\r\n    // setMouseUp(true);\r\n  }, []);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform: \"translate(\" + cursorData.x + \"px, \" + cursorData.y + \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  playerId: PropTypes.string,\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {\r\n  playerId: null,\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst CursorGhost = ({ playerId, gameData }) => {\r\n  if (!gameData || !gameData[playerId + \"_userName\"]) return null;\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        \"cursor\",\r\n        gameData[playerId + \"_cursorHide\"] ? \"hidden\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, gameData[playerId + \"_cursorHide\"]]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          gameData[playerId + \"_cursorX\"] +\r\n          \"px, \" +\r\n          gameData[playerId + \"_cursorY\"] +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"goccia\"></div>\r\n      <div className=\"text\">{gameData[playerId + \"_cursorText\"]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursorGhost.propTypes = {\r\n  playerId: PropTypes.string,\r\n  gameData: PropTypes.object,\r\n};\r\n\r\nCursorGhost.defaultProps = {\r\n  playerId: null,\r\n  gameData: null,\r\n};\r\n\r\nexport default CursorGhost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport Background from \"./scenes/background\";\nimport Menu from \"./scenes/menu\";\nimport Pregame from \"./scenes/pregame\";\nimport JoinPregame from \"./scenes/joinPregame\";\nimport CharacterSelection from \"./scenes/characterSelection\";\n\nimport { Cursor, CursorGhost } from \"./components/cursor\";\n\nimport { appVersion, CLIENT_SCENES, LSKEY } from \"./logic/constants\";\nimport { updateMyPlayer } from \"./logic/database\";\nimport { uuidv4 } from \"./logic/utility\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  // CLIENT DATA ##########################################\n\n  const [clientData, setClientData] = useState(() => {\n    const lsValue = JSON.parse(localStorage.getItem(LSKEY.CLIENT_DATA));\n    if (lsValue?.appVersion === appVersion)\n      return { ...lsValue, clientScene: CLIENT_SCENES.MENU };\n    const defaultValues = {\n      appVersion: appVersion,\n      deviceId: uuidv4(),\n      clientScene: CLIENT_SCENES.MENU,\n      userName: \"\",\n      currentLobbyKey: null,\n      playerId: null,\n      cursor: {\n        x: 0,\n        y: 0,\n        mouseUp: false,\n        mouseDown: false,\n        hide: true,\n        text: \"\",\n      },\n    };\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(defaultValues));\n    return defaultValues;\n  });\n\n  useEffect(() => {\n    updateMyPlayer(clientData);\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(clientData));\n  }, [clientData]);\n\n  const changeClientScene = useCallback((newScene) => {\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\n  }, []);\n\n  const changeUserName = useCallback((newUserName) => {\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\n  }, []);\n\n  const changeCurrentLobbyKey = useCallback((newCurrentLobbyKey) => {\n    setClientData((prev) => ({ ...prev, currentLobbyKey: newCurrentLobbyKey }));\n  }, []);\n\n  const changePlayerId = useCallback((newPlayerId) => {\n    setClientData((prev) => ({ ...prev, playerId: newPlayerId }));\n  }, []);\n\n  // CLIENT DATA CURSOR ##########################################\n\n  const changeCursorX = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, x: newValue, hide: false },\n    }));\n  }, []);\n  const changeCursorY = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, y: newValue, hide: false },\n    }));\n  }, []);\n  const changeCursorUp = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseUp: newValue },\n    }));\n  }, []);\n  const changeCursorDown = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseDown: newValue },\n    }));\n  }, []);\n  const changeCursorHide = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, hide: newValue },\n    }));\n  }, []);\n\n  // GAME DATA ##########################################\n\n  const [gameData, setGameData] = useState(null);\n\n  const mergeGameData = useCallback((newValue) => {\n    setGameData((prev) => ({\n      ...prev,\n      ...newValue,\n    }));\n  }, []);\n\n  // EFFETTI ##########################################\n\n  useEffect(() => {\n    console.log(\"gameData changed: \", { ...gameData });\n  }, [gameData]);\n\n  return (\n    <>\n      <Background />\n      {CLIENT_SCENES.MENU === clientData.clientScene && (\n        <Menu\n          clientData={clientData}\n          changeUserName={changeUserName}\n          changeCurrentLobbyKey={changeCurrentLobbyKey}\n          changeClientScene={changeClientScene}\n          mergeGameData={mergeGameData}\n        />\n      )}\n      {CLIENT_SCENES.LOBBY_PREGAME === clientData.clientScene && (\n        <Pregame\n          clientData={clientData}\n          gameData={gameData}\n          changePlayerId={changePlayerId}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {CLIENT_SCENES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\n        <JoinPregame\n          clientData={clientData}\n          changeCurrentLobbyKey={changeCurrentLobbyKey}\n          changeClientScene={changeClientScene}\n          mergeGameData={mergeGameData}\n        />\n      )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene && (\n        <CharacterSelection changeClientScene={changeClientScene} />\n      )}\n\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerBlue\" && (\n          <CursorGhost playerId=\"playerBlue\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerRed\" && (\n          <CursorGhost playerId=\"playerRed\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerGreen\" && (\n          <CursorGhost playerId=\"playerGreen\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerYellow\" && (\n          <CursorGhost playerId=\"playerYellow\" gameData={gameData} />\n        )}\n      {clientData.cursor && (\n        <Cursor\n          playerId={clientData.playerId}\n          cursorData={clientData.cursor}\n          changeCursorX={changeCursorX}\n          changeCursorY={changeCursorY}\n          changeCursorUp={changeCursorUp}\n          changeCursorDown={changeCursorDown}\n          changeCursorHide={changeCursorHide}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}