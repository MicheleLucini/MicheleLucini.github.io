{"version":3,"sources":["../node_modules/gun sync","scenes/background/Background.jsx","scenes/background/index.js","components/button/Button.jsx","components/button/index.js","components/textInput/TextInput.jsx","components/textInput/index.js","logic/constants.js","scenes/menu/Menu.jsx","scenes/menu/index.js","scenes/pregame/PlayerSlot.jsx","scenes/pregame/Pregame.jsx","scenes/pregame/index.js","logic/utility.js","logic/database.js","scenes/joinPregame/JoinPregame.jsx","scenes/joinPregame/index.js","scenes/characterSelection/CharacterSelection.jsx","scenes/characterSelection/index.js","components/cursor/Cursor.jsx","components/cursor/CursorGhost.jsx","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Background","gamePhase","className","defaultProps","Button","text","icon","onClick","disabled","type","TextInput","label","value","setValue","placeholder","onKeyPressEnter","useState","isActive","setIsActive","onChange","useCallback","target","onFocus","onBlur","onKeyPress","window","event","key","required","appVersion","CLIENT_SCENES","LSKEY","Menu","userName","changeUserName","changeClientScene","name","setName","onStartCampaign","onJoinCampaign","length","PlayerSlot","color","playerId","itsAMe","changePlayerId","customClass","useMemo","filter","x","join","spanText","Pregame","clientData","gameData","currentLobbyKey","playerBlue_userName","playerBlue_deviceId","deviceId","playerRed_userName","playerRed_deviceId","playerGreen_userName","playerGreen_deviceId","playerYellow_userName","playerYellow_deviceId","getRandomGameKey","result","characters","i","push","charAt","Math","floor","random","G","Gun","updateGame","myData","clientScene","cursor","y","hide","get","put","ack","JoinPregame","changeCurrentLobbyKey","lobbyCode","setLobbyCode","customSetLobbyCode","toUpperCase","CharacterSelection","Cursor","cursorData","changeCursorX","changeCursorY","changeCursorHide","changeCursorUp","changeCursorDown","cursorColor","cursorClass","mouseDown","mouseUp","handleMouseMove","handleMouseEnter","handleMouseLeave","handleMouseDown","handleMouseUp","handleContextMenu","preventDefault","useEffect","document","onmousemove","onmouseenter","onmouseleave","onmousedown","onmouseup","oncontextmenu","style","transform","CursorGhost","App","lsValue","JSON","parse","localStorage","getItem","defaultValues","replace","c","r","toString","setItem","stringify","setClientData","newScene","prev","newUserName","newCurrentLobbyKey","off","newPlayerId","newData","resetPlayerIdData","newValue","setGameData","mergeGameData","on","_msg","_ev","joinGame","console","log","ReactDOM","render","getElementById"],"mappings":"2NAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,kJCHnBC,EAAa,SAAC,GAAkB,EAAhBC,UACpB,OACE,qBAAKF,GAAG,KAAR,SACE,qBAAKG,UAAU,aAUrBF,EAAWG,aAAe,CACxBF,UAAW,MAGED,ICpBAA,EDoBAA,EEjBTI,G,MAAS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACrC,OACE,yBACEN,UAAW,iBAAmBM,EAAW,YAAc,IACvDC,KAAK,SACLF,QAASA,EAHX,UAKGD,GAAQ,sBAAMJ,UAAU,uBAAhB,SAAwCI,IAChDD,GAAQA,OAYfD,EAAOD,aAAe,CACpBE,KAAM,KACNC,KAAM,KACNC,QAAS,aACTC,UAAU,GAGGJ,IC9BAA,ED8BAA,EE3BTM,G,MAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEA,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,uBAAY,SAAC5B,GAC5BqB,EAASrB,EAAE6B,OAAOT,UAEdU,EAAUF,uBAAY,WAC1BF,GAAY,MAERK,EAASH,uBAAY,WACzBF,GAAY,MAERM,EAAaJ,uBAAY,SAAC5B,GAG9B,GAFKA,IAAGA,EAAIiC,OAAOC,OAEH,WADFlC,EAAEE,MAAQF,EAAEmC,MACCZ,EAEzB,OADAA,KACO,KAIX,OACE,sBACEb,UACE,cAAgBe,EAAW,UAAY,KAASL,EAAQ,UAAY,IAFxE,UAKE,gCAAQD,IACR,uBACEF,KAAK,OACLG,MAAOA,EACPO,SAAUA,EAEVL,YAAaA,EACbQ,QAASA,EACTC,OAAQA,EACRK,SAAS,WACTJ,WAAYA,SAgBpBd,EAAUP,aAAe,CACvBQ,MAAO,KACPC,MAAO,KAEPE,YAAa,KACbC,gBAAiB,MAGJL,ICtEAA,EDsEAA,EExEFmB,EAAa,QAEbC,EACL,OADKA,EAEI,gBAFJA,EAGS,qBAHTA,EAIU,sBAGVC,EACE,cCFTC,G,MAAO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBACxC,EAAwBnB,mBAASiB,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAkBlB,uBAAY,WAClCc,EAAeE,GACfD,EAAkBL,KACjB,CAACM,IAEEG,EAAiBnB,uBAAY,WACjCc,EAAeE,GACfD,EAAkBL,KACjB,CAACM,IAEJ,OACE,sBAAKrC,GAAG,OAAR,UACE,cAAC,EAAD,CAAWY,MAAM,OAAOC,MAAOwB,EAAMvB,SAAUwB,IAC/C,cAAC,EAAD,CACEhC,KAAK,kBACLC,KAAK,MACLC,QAAS+B,EACT9B,SAA0B,IAAhB4B,EAAKI,SAEjB,cAAC,EAAD,CACEnC,KAAK,gBACLC,KAAK,QACLC,QAASgC,EACT/B,SAA0B,IAAhB4B,EAAKI,cAYvBR,EAAK7B,aAAe,GAEL6B,IC9CAA,ED8CAA,EE3CTS,G,KAAa,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUV,EAAuC,EAAvCA,SAAUW,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACjDC,EAAcC,mBAClB,iBACE,CAAC,SAAUL,EAAOT,EAAW,KAAO,UACjCe,QAAO,SAACC,GAAD,QAASA,KAChBC,KAAK,OACV,CAACR,EAAOT,IAGJkB,EAAWJ,mBAAQ,WACvB,OAAKd,EACDW,EAAeX,EAAW,SACvBA,EAFe,UAAYS,EAAQ,WAGzC,CAACT,EAAUS,EAAOE,IAEfrC,EAAUa,uBAAY,WACtBa,GACJY,EAAeF,KACd,CAACV,EAAUU,IAEd,OACE,sBAAKzC,UAAW4C,EAAavC,QAASA,EAAtC,UACG0B,EACC,sBAAM/B,UAAU,4BAAhB,kBAEA,sBAAMA,UAAU,+BAAhB,uBAEF,+BAAOiD,SAabV,EAAWtC,aAAe,CACxB8B,SAAU,MAGGQ,QCzCTW,EAAU,SAAC,GAKV,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAT,EAEI,EAFJA,eACAV,EACI,EADJA,kBAEA,OACE,sBAAKpC,GAAG,UAAR,UACE,sBAAKG,UAAU,YAAf,wBAEE,sBAAMA,UAAU,aAAhB,SAA8BmD,EAAWE,qBAE3C,cAAC,EAAD,CACEb,MAAM,OACNC,SAAS,aACTV,SAAQ,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAUE,oBACpBZ,QAAgB,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAUG,uBAAwBJ,EAAWK,SACrDb,eAAgBA,IAElB,cAAC,EAAD,CACEH,MAAM,MACNC,SAAS,YACTV,SAAQ,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAUK,mBACpBf,QAAgB,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAUM,sBAAuBP,EAAWK,SACpDb,eAAgBA,IAElB,cAAC,EAAD,CACEH,MAAM,QACNC,SAAS,cACTV,SAAQ,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAUO,qBACpBjB,QAAgB,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAUQ,wBAAyBT,EAAWK,SACtDb,eAAgBA,IAElB,cAAC,EAAD,CACEH,MAAM,SACNC,SAAS,eACTV,SAAQ,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAUS,sBACpBnB,QAAgB,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAUU,yBAA0BX,EAAWK,SACvDb,eAAgBA,IAElB,cAAC,EAAD,CACExC,KAAK,OACLC,KAAK,aACLC,QAAS,kBAAM4B,EAAkBL,MAEnC,cAAC,EAAD,CACEzB,KAAK,QACLC,KAAK,aACLC,QAAS,kBAAM4B,EAAkBL,UAazCsB,EAAQjD,aAAe,CACrBmD,SAAU,MAGGF,ICvEAA,EDuEAA,E,OEjEFa,EAAmB,WAG9B,IAFA,IAAIC,EAAS,GACTC,EAAa,6BACRC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAOG,KACLF,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,EAAW3B,UAG5D,OAAO0B,EAAOhB,KAAK,KCbfwB,E,MAAIC,GAAI,CAAC,yCAkCFC,EAAa,SAACvB,GACzB,GAAKA,EAAWV,SAAhB,CAEA,IAAIkC,EAAS,GACbA,EAAOxB,EAAWV,SAAW,aAAeU,EAAWK,SACvDmB,EAAOxB,EAAWV,SAAW,aAAeU,EAAWpB,SACvD4C,EAAOxB,EAAWV,SAAW,gBAAkBU,EAAWyB,YAC1DD,EAAOxB,EAAWV,SAAW,YAAcU,EAAW0B,OAAO9B,EAC7D4B,EAAOxB,EAAWV,SAAW,YAAcU,EAAW0B,OAAOC,EAC7DH,EAAOxB,EAAWV,SAAW,eAAiBU,EAAW0B,OAAOE,KAChEJ,EAAOxB,EAAWV,SAAW,eAAiBU,EAAW0B,OAAO1E,KAEhEqE,EAAEQ,IAAI7B,EAAWE,iBAAiB4B,IAAIN,GAAQ,SAACO,SCxC3CC,G,MAAc,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,sBAAuBnD,EAAwB,EAAxBA,kBAC5C,EAAkCnB,mBAAS,IAA3C,mBAAOuE,EAAP,KAAkBC,EAAlB,KAEMjD,EAAiBnB,uBAAY,WACR,IAArBmE,EAAU/C,SACd8C,EAAsBC,GACtBpD,EAAkBL,MACjB,CAACyD,IAEEE,EAAqBrE,uBAAY,SAACR,GACtC4E,EAAa5E,EAAM8E,iBAClB,IAEH,OACE,sBAAK3F,GAAG,eAAR,UACE,cAAC,EAAD,CACEY,MAAM,aACNC,MAAO2E,EACP1E,SAAU4E,EACV1E,gBAAiBwB,IAEnB,cAAC,EAAD,CACElC,KAAK,OACLC,KAAK,aACLC,QAAS,kBAAM4B,EAAkBL,MAEnC,cAAC,EAAD,CACEzB,KAAK,gBACLC,KAAK,QACLC,QAASgC,EACT/B,SAA+B,IAArB+E,EAAU/C,cAU5B6C,EAAYlF,aAAe,GAEZkF,ICjDAA,EDiDAA,EE5CTM,G,MAAqB,SAAC,GAA2B,IAAzBxD,EAAwB,EAAxBA,kBAC5B,OACE,sBAAKpC,GAAG,sBAAR,UACE,wBACA,wBACA,wBACA,wBACA,cAAC,EAAD,CACEM,KAAK,OACLC,KAAK,aACLC,QAAS,kBAAM4B,EAAkBL,WAUzC6D,EAAmBxF,aAAe,GAEnBwF,IC3BAA,ED2BAA,EExBTC,G,KAAS,SAAC,GAQT,IAPLjD,EAOI,EAPJA,SACAkD,EAMI,EANJA,WACAC,EAKI,EALJA,cACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAQMC,EAAcpD,mBAAQ,WAC1B,OAAQJ,GACN,IAAK,aACH,MAAO,OAET,IAAK,YACH,MAAO,MAET,IAAK,cACH,MAAO,QAET,IAAK,eACH,MAAO,SAET,QACE,OAAO,QAGV,CAACA,IAEEyD,EAAcrD,mBAClB,iBACE,CACE8C,EAAWZ,KAAO,SAAW,KAC7BY,EAAWQ,UAAY,OAAS,KAChCR,EAAWS,QAAU,KAAO,KAC5BH,GAECnD,QAAO,SAACC,GAAD,QAASA,KAChBC,KAAK,OACV,CAACiD,EAAaN,EAAWZ,KAAMY,EAAWQ,UAAWR,EAAWS,UAG5DC,EAAkBnF,uBAAY,SAACM,GACnC,IAAMlC,EAAIkC,GAASD,OAAOC,MAC1BoE,EAActG,EAAEyD,GAChB8C,EAAcvG,EAAEwF,KAGf,IAEGwB,EAAmBpF,uBAAY,WACnC4E,GAAiB,KAEhB,IAEGS,EAAmBrF,uBAAY,WACnC6E,GAAe,GACfD,GAAiB,KAGhB,IAEGU,EAAkBtF,uBAAY,WAClC6E,GAAe,GACfC,GAAiB,KAGhB,IAEGS,EAAgBvF,uBAAY,WAChC8E,GAAiB,GACjBD,GAAe,KAGd,IAEGW,EAAoBxF,uBAAY,SAACM,GAErC,OADAA,EAAMmF,kBACC,IACN,IAWH,OATAC,qBAAU,WACRC,SAASC,YAAcT,EACvBQ,SAASE,aAAeT,EACxBO,SAASG,aAAeT,EACxBM,SAASI,YAAcT,EACvBK,SAASK,UAAYT,EACrBI,SAASM,cAAgBT,KAIzB,sBACE7G,GAAG,SACHG,UAAWkG,EACXkB,MAAO,CACLC,UAAW,aAAe1B,EAAW5C,EAAI,OAAS4C,EAAWb,EAAI,OAJrE,UAOE,qBAAK9E,UAAU,WACf,qBAAKA,UAAU,OAAf,SAAuB2F,EAAWxF,YAexCuF,EAAOzF,aAAe,CACpBwC,SAAU,MAGGiD,QC5HT4B,EAAc,SAAC,GAA4B,IAA1B7E,EAAyB,EAAzBA,SAAUW,EAAe,EAAfA,SAC/B,IAAKA,IAAaA,EAASX,EAAW,aAAc,OAAO,KAE3D,IAAMwD,EAAcpD,mBAAQ,WAC1B,OAAQJ,GACN,IAAK,aACH,MAAO,OAET,IAAK,YACH,MAAO,MAET,IAAK,cACH,MAAO,QAET,IAAK,eACH,MAAO,SAET,QACE,OAAO,QAGV,CAACA,IAEEyD,EAAcrD,mBAClB,iBACE,CAACO,EAASX,EAAW,eAAiB,SAAW,KAAMwD,GACpDnD,QAAO,SAACC,GAAD,QAASA,KAChBC,KAAK,OACV,CAACiD,EAAa7C,EAASX,EAAW,iBAGpC,OACE,sBACEzC,UAAWkG,EACXkB,MAAO,CACLC,UACE,aACAjE,EAASX,EAAW,YACpB,OACAW,EAASX,EAAW,YACpB,OARN,UAWE,qBAAKzC,UAAU,WACf,qBAAKA,UAAU,OAAf,SAAuBoD,EAASX,EAAW,qBAUjD6E,EAAYrH,aAAe,CACzBwC,SAAU,KACVW,SAAU,MAGGkE,QC8HAC,G,MAzKH,WAGV,MAAoCzG,oBAAS,WAC3C,IAAM0G,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ/F,IAChD,IAAW,OAAP2F,QAAO,IAAPA,OAAA,EAAAA,EAAS7F,cAAeA,EAAY,OAAO6F,EAC/C,IAAMK,EAAgB,CACpBlG,WAAYA,EACZ6B,SR5BG,uCAAuCsE,QAAQ,SAAS,SAAUC,GACvE,IAAIC,EAAqB,GAAhB3D,KAAKE,SAAiB,EAE/B,OADW,KAALwD,EAAWC,EAAS,EAAJA,EAAW,GACxBC,SAAS,OQ0BhBrD,YAAahD,EACbG,SAAU,GACVsB,gBAAiBU,IACjBtB,SAAU,KACVoC,OAAQ,CACN9B,EAAG,EACH+B,EAAG,EACHsB,SAAS,EACTD,WAAW,EACXpB,MAAM,EACN5E,KAAM,KAIV,OADAwH,aAAaO,QAAQrG,EAAmB4F,KAAKU,UAAUN,IAChDA,KApBT,mBAAO1E,EAAP,KAAmBiF,EAAnB,KAuBAxB,qBAAU,WAERlC,EAAWvB,GACXwE,aAAaO,QAAQrG,EAAmB4F,KAAKU,UAAUhF,MACtD,CAACA,IAEJ,IAAMlB,EAAoBf,uBAAY,SAACmH,GACrCD,GAAc,SAACE,GAAD,mBAAC,eAAeA,GAAhB,IAAsB1D,YAAayD,SAChD,IAEGrG,EAAiBd,uBAAY,SAACqH,GAClCH,GAAc,SAACE,GAAD,mBAAC,eAAeA,GAAhB,IAAsBvG,SAAUwG,SAC7C,IAEGnD,EAAwBlE,uBAAY,SAACsH,GACzCJ,GAAc,SAACE,GPEM,IAAC7G,EOApB,OPAoBA,EODV6G,EAAKjF,gBPEnBmB,EAAEQ,IAAIvD,GAAKgH,MODA,2BAAKH,GAAZ,IAAkBjF,gBAAiBmF,SAEpC,IAEG7F,EAAiBzB,uBAAY,SAACwH,GAClCN,GAAc,SAACE,GAEb,OPnB2B,SAACnF,GAChC,IAAIwF,EAAU,GACdA,EAAQxF,EAAWV,SAAW,aAAe,KAC7CkG,EAAQxF,EAAWV,SAAW,aAAe,KAC7CkG,EAAQxF,EAAWV,SAAW,gBAAkB,KAChDkG,EAAQxF,EAAWV,SAAW,YAAc,KAC5CkG,EAAQxF,EAAWV,SAAW,YAAc,KAC5CkG,EAAQxF,EAAWV,SAAW,eAAiB,KAC/CkG,EAAQxF,EAAWV,SAAW,eAAiB,KAC/C+B,EAAEQ,IAAI7B,EAAWE,iBAAiB4B,IAAI0D,GAAS,SAACzD,OOS5C0D,CAAkBN,GACX,2BAAKA,GAAZ,IAAkB7F,SAAUiG,SAE7B,IAIG9C,EAAgB1E,uBAAY,SAAC2H,GACjCT,GAAc,SAACE,GAAD,mBAAC,eACVA,GADS,IAEZzD,OAAO,2BAAMyD,EAAKzD,QAAZ,IAAoB9B,EAAG8F,EAAU9D,MAAM,WAE9C,IACGc,EAAgB3E,uBAAY,SAAC2H,GACjCT,GAAc,SAACE,GAAD,mBAAC,eACVA,GADS,IAEZzD,OAAO,2BAAMyD,EAAKzD,QAAZ,IAAoBC,EAAG+D,EAAU9D,MAAM,WAE9C,IACGgB,EAAiB7E,uBAAY,SAAC2H,GAClCT,GAAc,SAACE,GAAD,mBAAC,eACVA,GADS,IAEZzD,OAAO,2BAAMyD,EAAKzD,QAAZ,IAAoBuB,QAASyC,WAEpC,IACG7C,EAAmB9E,uBAAY,SAAC2H,GACpCT,GAAc,SAACE,GAAD,mBAAC,eACVA,GADS,IAEZzD,OAAO,2BAAMyD,EAAKzD,QAAZ,IAAoBsB,UAAW0C,WAEtC,IACG/C,EAAmB5E,uBAAY,SAAC2H,GACpCT,GAAc,SAACE,GAAD,mBAAC,eACVA,GADS,IAEZzD,OAAO,2BAAMyD,EAAKzD,QAAZ,IAAoBE,KAAM8D,WAEjC,IAIH,EAAgC/H,mBAAS,MAAzC,mBAAOsC,EAAP,KAAiB0F,EAAjB,KAEMC,EAAgB7H,uBAAY,SAAC2H,GACjCC,GAAY,SAACR,GAAD,mBAAC,eACRA,GACAO,QAEJ,IAcH,OAZAjC,qBAAU,WAEyB,OAA/BzD,EAAWE,iBACoB,KAA/BF,EAAWE,iBPnGO,SAACF,EAAYlC,GACnCuD,EAAEQ,IAAI7B,EAAWE,iBAAiB2F,IAAG,SAACtI,EAAOe,EAAKwH,EAAMC,GAKtDjI,EAASP,MACR,GAIHgE,EAAWvB,GO0FPgG,CAAShG,EAAY4F,KACtB,CAAC5F,EAAWE,kBAEfuD,qBAAU,WACRwC,QAAQC,IAAI,qBAAZ,eAAuCjG,MACtC,CAACA,IAGF,qCACE,cAAC,EAAD,IACCxB,IAAuBuB,EAAWyB,aACjC,cAAC,EAAD,CACE7C,SAAUoB,EAAWpB,SACrBC,eAAgBA,EAChBC,kBAAmBA,IAGtBL,IAAgCuB,EAAWyB,aAC1C,cAAC,EAAD,CACEzB,WAAYA,EACZC,SAAUA,EACVT,eAAgBA,EAChBV,kBAAmBA,IAGtBL,IAAqCuB,EAAWyB,aAC/C,cAAC,EAAD,CACEQ,sBAAuBA,EACvBnD,kBAAmBA,IAGtBL,IAAsCuB,EAAWyB,aAChD,cAAC,EAAD,CAAoB3C,kBAAmBA,IAGxCL,IAAsCuB,EAAWyB,aACxB,eAAxBzB,EAAWV,UACT,cAAC,EAAD,CAAaA,SAAS,aAAaW,SAAUA,IAEhDxB,IAAsCuB,EAAWyB,aACxB,cAAxBzB,EAAWV,UACT,cAAC,EAAD,CAAaA,SAAS,YAAYW,SAAUA,IAE/CxB,IAAsCuB,EAAWyB,aACxB,gBAAxBzB,EAAWV,UACT,cAAC,EAAD,CAAaA,SAAS,cAAcW,SAAUA,IAEjDxB,IAAsCuB,EAAWyB,aACxB,iBAAxBzB,EAAWV,UACT,cAAC,EAAD,CAAaA,SAAS,eAAeW,SAAUA,IAElDD,EAAW0B,QACV,cAAC,EAAD,CACEpC,SAAUU,EAAWV,SACrBkD,WAAYxC,EAAW0B,OACvBe,cAAeA,EACfC,cAAeA,EACfE,eAAgBA,EAChBC,iBAAkBA,EAClBF,iBAAkBA,SCnL5BwD,IAASC,OAAO,cAAC,EAAD,IAAS1C,SAAS2C,eAAe,U","file":"static/js/main.4345d48a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 24;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./background.css\";\r\n\r\nconst Background = ({ gamePhase }) => {\r\n  return (\r\n    <div id=\"bg\">\r\n      <div className=\"noise\"></div>\r\n      {/* <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  gamePhase: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  gamePhase: null,\r\n};\r\n\r\nexport default Background;\r\n","import Background from './Background';\r\n\r\nexport default Background;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ text, icon, onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      className={\"simple-button\" + (disabled ? \" disabled\" : \"\")}\r\n      type=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {icon && <span className=\"material-icons-round\">{icon}</span>}\r\n      {text && text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: null,\r\n  icon: null,\r\n  onClick: () => {},\r\n  disabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./textInput.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  placeholder,\r\n  onKeyPressEnter,\r\n}) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  });\r\n  const onFocus = useCallback(() => {\r\n    setIsActive(true);\r\n  });\r\n  const onBlur = useCallback(() => {\r\n    setIsActive(false);\r\n  });\r\n  const onKeyPress = useCallback((e) => {\r\n    if (!e) e = window.event;\r\n    var keyCode = e.code || e.key;\r\n    if (keyCode === \"Enter\" && onKeyPressEnter) {\r\n      onKeyPressEnter();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"text-input\" + (isActive ? \" active\" : \"\") + (!!value ? \" filled\" : \"\")\r\n      }\r\n    >\r\n      <label>{label}</label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        // validate={validate}\r\n        placeholder={placeholder}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        required=\"required\"\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      {/* <p>// place for errors</p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func.isRequired,\r\n  // validate: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  onKeyPressEnter: PropTypes.func,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  value: null,\r\n  // validate: () => {},\r\n  placeholder: null,\r\n  onKeyPressEnter: null,\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from './TextInput';\r\n\r\nexport default TextInput;\r\n","export const appVersion = \"0.0.1\";\r\n\r\nexport const CLIENT_SCENES = {\r\n  MENU: \"menu\",\r\n  LOBBY_PREGAME: \"lobby_pregame\",\r\n  JOIN_LOBBY_PREGAME: \"join_lobby_pregame\",\r\n  CHARACTER_SELECTION: \"character_selection\",\r\n};\r\n\r\nexport const LSKEY = {\r\n  CLIENT_DATA: \"CLIENT_DATA\",\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ userName, changeUserName, changeClientScene }) => {\r\n  const [name, setName] = useState(userName);\r\n\r\n  const onStartCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n  }, [name]);\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    changeUserName(name);\r\n    changeClientScene(CLIENT_SCENES.JOIN_LOBBY_PREGAME);\r\n  }, [name]);\r\n\r\n  return (\r\n    <div id=\"menu\">\r\n      <TextInput label=\"Name\" value={name} setValue={setName} />\r\n      <Button\r\n        text=\"Create campaign\"\r\n        icon=\"add\"\r\n        onClick={onStartCampaign}\r\n        disabled={name.length === 0}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={name.length === 0}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  changeUserName: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import Menu from './Menu';\r\n\r\nexport default Menu;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst PlayerSlot = ({ color, playerId, userName, itsAMe, changePlayerId }) => {\r\n  const customClass = useMemo(\r\n    () =>\r\n      [\"player\", color, userName ? null : \"locked\"]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [color, userName]\r\n  );\r\n\r\n  const spanText = useMemo(() => {\r\n    if (!userName) return \"Player \" + color + \" (bot)\";\r\n    if (itsAMe) return userName + \" (you)\";\r\n    return userName;\r\n  }, [userName, color, itsAMe]);\r\n\r\n  const onClick = useCallback(() => {\r\n    if (userName) return;\r\n    changePlayerId(playerId);\r\n  }, [userName, playerId]);\r\n\r\n  return (\r\n    <div className={customClass} onClick={onClick}>\r\n      {userName ? (\r\n        <span className=\"icon material-icons-round\">face</span>\r\n      ) : (\r\n        <span className=\"icon material-icons-outlined\">smart_toy</span>\r\n      )}\r\n      <span>{spanText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayerSlot.propTypes = {\r\n  color: PropTypes.oneOf([\"blue\", \"red\", \"green\", \"yellow\"]).isRequired,\r\n  playerId: PropTypes.string.isRequired,\r\n  userName: PropTypes.string,\r\n  itsAMe: PropTypes.bool.isRequired,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayerSlot.defaultProps = {\r\n  userName: null,\r\n};\r\n\r\nexport default PlayerSlot;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport PlayerSlot from \"./PlayerSlot\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./pregame.css\";\r\n\r\nconst Pregame = ({\r\n  clientData,\r\n  gameData,\r\n  changePlayerId,\r\n  changeClientScene,\r\n}) => {\r\n  return (\r\n    <div id=\"pregame\">\r\n      <div className=\"lobby-key\">\r\n        Lobby code:\r\n        <span className=\"selectable\">{clientData.currentLobbyKey}</span>\r\n      </div>\r\n      <PlayerSlot\r\n        color=\"blue\"\r\n        playerId=\"playerBlue\"\r\n        userName={gameData?.playerBlue_userName}\r\n        itsAMe={gameData?.playerBlue_deviceId === clientData.deviceId}\r\n        changePlayerId={changePlayerId}\r\n      />\r\n      <PlayerSlot\r\n        color=\"red\"\r\n        playerId=\"playerRed\"\r\n        userName={gameData?.playerRed_userName}\r\n        itsAMe={gameData?.playerRed_deviceId === clientData.deviceId}\r\n        changePlayerId={changePlayerId}\r\n      />\r\n      <PlayerSlot\r\n        color=\"green\"\r\n        playerId=\"playerGreen\"\r\n        userName={gameData?.playerGreen_userName}\r\n        itsAMe={gameData?.playerGreen_deviceId === clientData.deviceId}\r\n        changePlayerId={changePlayerId}\r\n      />\r\n      <PlayerSlot\r\n        color=\"yellow\"\r\n        playerId=\"playerYellow\"\r\n        userName={gameData?.playerYellow_userName}\r\n        itsAMe={gameData?.playerYellow_deviceId === clientData.deviceId}\r\n        changePlayerId={changePlayerId}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      />\r\n      <Button\r\n        text=\"Start\"\r\n        icon=\"play_arrow\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.CHARACTER_SELECTION)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPregame.propTypes = {\r\n  clientData: PropTypes.object.isRequired,\r\n  gameData: PropTypes.object,\r\n  changePlayerId: PropTypes.func.isRequired,\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nPregame.defaultProps = {\r\n  gameData: null,\r\n};\r\n\r\nexport default Pregame;\r\n","import Pregame from './Pregame';\r\n\r\nexport default Pregame;\r\n","export const uuidv4 = () => {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const getRandomGameKey = () => {\r\n  var result = [];\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  for (var i = 0; i < 4; i++) {\r\n    result.push(\r\n      characters.charAt(Math.floor(Math.random() * characters.length))\r\n    );\r\n  }\r\n  return result.join(\"\");\r\n};\r\n","import Gun from \"gun\";\r\nimport { getRandomGameKey } from \"./utility\";\r\n\r\nconst G = Gun([\"https://project-bg.herokuapp.com/gun\"]);\r\n\r\nconst resetGame = (key) => {\r\n  G.get(key).put(null);\r\n};\r\n\r\n// export const saveGame = (game) => {\r\n//   G.get(game.key).put(game, (ack) => {\r\n//     // console.log(\"game saved:\", ack);\r\n//   });\r\n// };\r\n\r\n// export const createGame = (gamePhase) => {\r\n//   const gameObj = {\r\n//     key: getRandomGameKey(),\r\n//     gamePhase,\r\n//   };\r\n//   saveGame(G, gameObj);\r\n// };\r\n\r\nexport const joinGame = (clientData, onChange) => {\r\n  G.get(clientData.currentLobbyKey).on((value, key, _msg, _ev) => {\r\n    // console.log({ value });\r\n    // console.log({ key });\r\n    // console.log({ _msg });\r\n    // console.log({ _ev });\r\n    onChange(value);\r\n  }, true);\r\n\r\n  // resetGame(clientData.currentLobbyKey);\r\n\r\n  updateGame(clientData);\r\n};\r\n\r\nexport const updateGame = (clientData) => {\r\n  if (!clientData.playerId) return;\r\n\r\n  let myData = {};\r\n  myData[clientData.playerId + \"_deviceId\"] = clientData.deviceId;\r\n  myData[clientData.playerId + \"_userName\"] = clientData.userName;\r\n  myData[clientData.playerId + \"_clientScene\"] = clientData.clientScene;\r\n  myData[clientData.playerId + \"_cursorX\"] = clientData.cursor.x;\r\n  myData[clientData.playerId + \"_cursorY\"] = clientData.cursor.y;\r\n  myData[clientData.playerId + \"_cursorHide\"] = clientData.cursor.hide;\r\n  myData[clientData.playerId + \"_cursorText\"] = clientData.cursor.text;\r\n\r\n  G.get(clientData.currentLobbyKey).put(myData, (ack) => {});\r\n};\r\n\r\nexport const resetPlayerIdData = (clientData) => {\r\n  let newData = {};\r\n  newData[clientData.playerId + \"_deviceId\"] = null;\r\n  newData[clientData.playerId + \"_userName\"] = null;\r\n  newData[clientData.playerId + \"_clientScene\"] = null;\r\n  newData[clientData.playerId + \"_cursorX\"] = null;\r\n  newData[clientData.playerId + \"_cursorY\"] = null;\r\n  newData[clientData.playerId + \"_cursorHide\"] = null;\r\n  newData[clientData.playerId + \"_cursorText\"] = null;\r\n  G.get(clientData.currentLobbyKey).put(newData, (ack) => {});\r\n};\r\n\r\nexport const leaveGame = (key) => {\r\n  G.get(key).off();\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport TextInput from \"../../components/textInput\";\r\nimport { CLIENT_SCENES, LSKEY } from \"../../logic/constants\";\r\nimport { joinGame } from \"../../logic/database\";\r\n\r\nimport \"./joinPregame.css\";\r\n\r\nconst JoinPregame = ({ changeCurrentLobbyKey, changeClientScene }) => {\r\n  const [lobbyCode, setLobbyCode] = useState(\"\");\r\n\r\n  const onJoinCampaign = useCallback(() => {\r\n    if (lobbyCode.length !== 4) return;\r\n    changeCurrentLobbyKey(lobbyCode);\r\n    changeClientScene(CLIENT_SCENES.LOBBY_PREGAME);\r\n  }, [lobbyCode]);\r\n\r\n  const customSetLobbyCode = useCallback((value) => {\r\n    setLobbyCode(value.toUpperCase());\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"join_pregame\">\r\n      <TextInput\r\n        label=\"Lobby code\"\r\n        value={lobbyCode}\r\n        setValue={customSetLobbyCode}\r\n        onKeyPressEnter={onJoinCampaign}\r\n      />\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.MENU)}\r\n      ></Button>\r\n      <Button\r\n        text=\"Join campaign\"\r\n        icon=\"login\"\r\n        onClick={onJoinCampaign}\r\n        disabled={lobbyCode.length !== 4}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoinPregame.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nJoinPregame.defaultProps = {};\r\n\r\nexport default JoinPregame;\r\n","import JoinPregame from './JoinPregame';\r\n\r\nexport default JoinPregame;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../../components/button\";\r\nimport { CLIENT_SCENES } from \"../../logic/constants\";\r\n\r\nimport \"./characterSelection.css\";\r\n\r\nconst CharacterSelection = ({ changeClientScene }) => {\r\n  return (\r\n    <div id=\"character_selection\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <Button\r\n        text=\"Back\"\r\n        icon=\"arrow_back\"\r\n        onClick={() => changeClientScene(CLIENT_SCENES.LOBBY_PREGAME)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterSelection.propTypes = {\r\n  changeClientScene: PropTypes.func.isRequired,\r\n};\r\n\r\nCharacterSelection.defaultProps = {};\r\n\r\nexport default CharacterSelection;\r\n","import CharacterSelection from './CharacterSelection';\r\n\r\nexport default CharacterSelection;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst Cursor = ({\r\n  playerId,\r\n  cursorData,\r\n  changeCursorX,\r\n  changeCursorY,\r\n  changeCursorHide,\r\n  changeCursorUp,\r\n  changeCursorDown,\r\n}) => {\r\n  // const [hide, setHide] = useState(true);\r\n  // const [mouseDown, setMouseDown] = useState(false);\r\n  // const [mouseUp, setMouseUp] = useState(false);\r\n  // const [x, setX] = useState(0);\r\n  // const [y, setY] = useState(0);\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [\r\n        cursorData.hide ? \"hidden\" : null,\r\n        cursorData.mouseDown ? \"down\" : null,\r\n        cursorData.mouseUp ? \"up\" : null,\r\n        cursorColor,\r\n      ]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, cursorData.hide, cursorData.mouseDown, cursorData.mouseUp]\r\n  );\r\n\r\n  const handleMouseMove = useCallback((event) => {\r\n    const e = event || window.event;\r\n    changeCursorX(e.x);\r\n    changeCursorY(e.y);\r\n    // setX(e.x);\r\n    // setY(e.y);\r\n  }, []);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    changeCursorHide(false);\r\n    // setHide(false);\r\n  }, []);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorHide(true);\r\n    // setMouseUp(false);\r\n    // setHide(true);\r\n  }, []);\r\n\r\n  const handleMouseDown = useCallback(() => {\r\n    changeCursorUp(false);\r\n    changeCursorDown(true);\r\n    // setMouseUp(false);\r\n    // setMouseDown(true);\r\n  }, []);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    changeCursorDown(false);\r\n    changeCursorUp(true);\r\n    // setMouseDown(false);\r\n    // setMouseUp(true);\r\n  }, []);\r\n\r\n  const handleContextMenu = useCallback((event) => {\r\n    event.preventDefault();\r\n    return false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.onmousemove = handleMouseMove;\r\n    document.onmouseenter = handleMouseEnter;\r\n    document.onmouseleave = handleMouseLeave;\r\n    document.onmousedown = handleMouseDown;\r\n    document.onmouseup = handleMouseUp;\r\n    document.oncontextmenu = handleContextMenu;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      id=\"cursor\"\r\n      className={cursorClass}\r\n      style={{\r\n        transform: \"translate(\" + cursorData.x + \"px, \" + cursorData.y + \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"cursor\"></div>\r\n      <div className=\"text\">{cursorData.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursor.propTypes = {\r\n  playerId: PropTypes.string,\r\n  cursorData: PropTypes.object.isRequired,\r\n  changeCursorX: PropTypes.func.isRequired,\r\n  changeCursorY: PropTypes.func.isRequired,\r\n  changeCursorUp: PropTypes.func.isRequired,\r\n  changeCursorDown: PropTypes.func.isRequired,\r\n  changeCursorHide: PropTypes.func.isRequired,\r\n};\r\n\r\nCursor.defaultProps = {\r\n  playerId: null,\r\n};\r\n\r\nexport default Cursor;\r\n","import React, { useMemo, useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./cursor.css\";\r\n\r\nconst CursorGhost = ({ playerId, gameData }) => {\r\n  if (!gameData || !gameData[playerId + \"_userName\"]) return null;\r\n\r\n  const cursorColor = useMemo(() => {\r\n    switch (playerId) {\r\n      case \"playerBlue\":\r\n        return \"blue\";\r\n        break;\r\n      case \"playerRed\":\r\n        return \"red\";\r\n        break;\r\n      case \"playerGreen\":\r\n        return \"green\";\r\n        break;\r\n      case \"playerYellow\":\r\n        return \"yellow\";\r\n        break;\r\n      default:\r\n        return null;\r\n        break;\r\n    }\r\n  }, [playerId]);\r\n\r\n  const cursorClass = useMemo(\r\n    () =>\r\n      [gameData[playerId + \"_cursorHide\"] ? \"hidden\" : null, cursorColor]\r\n        .filter((x) => !!x)\r\n        .join(\" \"),\r\n    [cursorColor, gameData[playerId + \"_cursorHide\"]]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cursorClass}\r\n      style={{\r\n        transform:\r\n          \"translate(\" +\r\n          gameData[playerId + \"_cursorX\"] +\r\n          \"px, \" +\r\n          gameData[playerId + \"_cursorY\"] +\r\n          \"px)\",\r\n      }}\r\n    >\r\n      <div className=\"cursor\"></div>\r\n      <div className=\"text\">{gameData[playerId + \"_cursorText\"]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCursorGhost.propTypes = {\r\n  playerId: PropTypes.string,\r\n  gameData: PropTypes.object,\r\n};\r\n\r\nCursorGhost.defaultProps = {\r\n  playerId: null,\r\n  gameData: null,\r\n};\r\n\r\nexport default CursorGhost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport Background from \"./scenes/background\";\nimport Menu from \"./scenes/menu\";\nimport Pregame from \"./scenes/pregame\";\nimport JoinPregame from \"./scenes/joinPregame\";\nimport CharacterSelection from \"./scenes/characterSelection\";\n\nimport { Cursor, CursorGhost } from \"./components/cursor\";\n\nimport { appVersion, CLIENT_SCENES, LSKEY } from \"./logic/constants\";\nimport {\n  joinGame,\n  updateGame,\n  leaveGame,\n  resetPlayerIdData,\n} from \"./logic/database\";\nimport { uuidv4, getRandomGameKey } from \"./logic/utility\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  // CLIENT DATA\n\n  const [clientData, setClientData] = useState(() => {\n    const lsValue = JSON.parse(localStorage.getItem(LSKEY.CLIENT_DATA));\n    if (lsValue?.appVersion === appVersion) return lsValue;\n    const defaultValues = {\n      appVersion: appVersion,\n      deviceId: uuidv4(),\n      clientScene: CLIENT_SCENES.MENU,\n      userName: \"\",\n      currentLobbyKey: getRandomGameKey(),\n      playerId: null,\n      cursor: {\n        x: 0,\n        y: 0,\n        mouseUp: false,\n        mouseDown: false,\n        hide: true,\n        text: \"\",\n      },\n    };\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(defaultValues));\n    return defaultValues;\n  });\n\n  useEffect(() => {\n    // console.log(\"saving: \", { ...clientData });\n    updateGame(clientData);\n    localStorage.setItem(LSKEY.CLIENT_DATA, JSON.stringify(clientData));\n  }, [clientData]);\n\n  const changeClientScene = useCallback((newScene) => {\n    setClientData((prev) => ({ ...prev, clientScene: newScene }));\n  }, []);\n\n  const changeUserName = useCallback((newUserName) => {\n    setClientData((prev) => ({ ...prev, userName: newUserName }));\n  }, []);\n\n  const changeCurrentLobbyKey = useCallback((newCurrentLobbyKey) => {\n    setClientData((prev) => {\n      leaveGame(prev.currentLobbyKey);\n      return { ...prev, currentLobbyKey: newCurrentLobbyKey };\n    });\n  }, []);\n\n  const changePlayerId = useCallback((newPlayerId) => {\n    setClientData((prev) => {\n      resetPlayerIdData(prev);\n      return { ...prev, playerId: newPlayerId };\n    });\n  }, []);\n\n  // CLIENT DATA CURSOR\n\n  const changeCursorX = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, x: newValue, hide: false },\n    }));\n  }, []);\n  const changeCursorY = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, y: newValue, hide: false },\n    }));\n  }, []);\n  const changeCursorUp = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseUp: newValue },\n    }));\n  }, []);\n  const changeCursorDown = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, mouseDown: newValue },\n    }));\n  }, []);\n  const changeCursorHide = useCallback((newValue) => {\n    setClientData((prev) => ({\n      ...prev,\n      cursor: { ...prev.cursor, hide: newValue },\n    }));\n  }, []);\n\n  // GAME DATA\n\n  const [gameData, setGameData] = useState(null);\n\n  const mergeGameData = useCallback((newValue) => {\n    setGameData((prev) => ({\n      ...prev,\n      ...newValue,\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (\n      clientData.currentLobbyKey !== null &&\n      clientData.currentLobbyKey !== \"\"\n    )\n      joinGame(clientData, mergeGameData);\n  }, [clientData.currentLobbyKey]);\n\n  useEffect(() => {\n    console.log(\"gameData changed: \", { ...gameData });\n  }, [gameData]);\n\n  return (\n    <>\n      <Background />\n      {CLIENT_SCENES.MENU === clientData.clientScene && (\n        <Menu\n          userName={clientData.userName}\n          changeUserName={changeUserName}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {CLIENT_SCENES.LOBBY_PREGAME === clientData.clientScene && (\n        <Pregame\n          clientData={clientData}\n          gameData={gameData}\n          changePlayerId={changePlayerId}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {CLIENT_SCENES.JOIN_LOBBY_PREGAME === clientData.clientScene && (\n        <JoinPregame\n          changeCurrentLobbyKey={changeCurrentLobbyKey}\n          changeClientScene={changeClientScene}\n        />\n      )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene && (\n        <CharacterSelection changeClientScene={changeClientScene} />\n      )}\n\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerBlue\" && (\n          <CursorGhost playerId=\"playerBlue\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerRed\" && (\n          <CursorGhost playerId=\"playerRed\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerGreen\" && (\n          <CursorGhost playerId=\"playerGreen\" gameData={gameData} />\n        )}\n      {CLIENT_SCENES.CHARACTER_SELECTION === clientData.clientScene &&\n        clientData.playerId !== \"playerYellow\" && (\n          <CursorGhost playerId=\"playerYellow\" gameData={gameData} />\n        )}\n      {clientData.cursor && (\n        <Cursor\n          playerId={clientData.playerId}\n          cursorData={clientData.cursor}\n          changeCursorX={changeCursorX}\n          changeCursorY={changeCursorY}\n          changeCursorUp={changeCursorUp}\n          changeCursorDown={changeCursorDown}\n          changeCursorHide={changeCursorHide}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}